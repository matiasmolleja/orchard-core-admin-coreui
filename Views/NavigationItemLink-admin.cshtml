@{
    // Morphing the shape to keep Model untouched
    Model.Metadata.Alternates.Clear();
    Model.Metadata.Type = "NavigationItemText";
    Model.Metadata.Alternates.Add("NavigationItemText_Id__" + Model.Id);

    TagBuilder tag;

    if (Model.HasItems)
    {

        tag = new TagBuilder("a");
        tag.AddCssClass("nav-link nav-dropdown-toggle");

        if ((bool)Model.Selected)
        {
            tag.Attributes["aria-expanded"] = "true";
        }
        else
        {
            tag.Attributes["aria-expanded"] = "false";
        }

        tag.TagRenderMode = TagRenderMode.Normal;
        tag.InnerHtml.AppendHtml(await DisplayAsync(Model));

        //tag.InnerHtml.AppendHtml(Html.Raw("<span><i class=\"fas fa-chevron-right fa-xs chevron\"></i></span>"));
    }
    else
    {
        tag = Tag(Model, "a");
        tag.AddCssClass("nav-link no-children");
        tag.Attributes["href"] = Model.Href ?? "#";
        tag.InnerHtml.AppendHtml(await DisplayAsync(Model));
    }
}

@tag



@*@{
    // Morphing the shape to keep Model untouched
    Model.Metadata.Alternates.Clear();
    Model.Metadata.Type = "NavigationItemText";
    Model.Metadata.Alternates.Add("NavigationItemText_Id__" + Model.Id);

    TagBuilder tag;

    if (Model.HasItems)
    {
        // Label
        tag = new TagBuilder("label");
        //tag.Attributes["data-toggle"] = "collapse";
        //tag.Attributes["data-target"] = "#" + Model.GetHashCode().ToString();
        //tag.Attributes["aria-expanded"] = "false";
        //tag.Attributes["aria-controls"] = Model.GetHashCode().ToString();

        if ((bool)Model.Selected)
        {
            tag.Attributes["aria-expanded"] = "true";
        }
        else
        {
            tag.Attributes["aria-expanded"] = "false";
        }

        tag.TagRenderMode = TagRenderMode.Normal;
        tag.InnerHtml.AppendHtml(await DisplayAsync(Model));

        tag.InnerHtml.AppendHtml(Html.Raw("<span><i class=\"fas fa-chevron-right fa-xs chevron\"></i></span>"));
    }
    else
    {
        tag = Tag(Model, "a");
        tag.AddCssClass("nav-link");
        tag.Attributes["href"] = Model.Href ?? "#";
        tag.InnerHtml.AppendHtml(await DisplayAsync(Model));
    }
}

@tag*@