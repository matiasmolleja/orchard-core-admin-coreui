@using OrchardCore.ContentManagement
@using OrchardCore.ContentManagement.Metadata
@using OrchardCore.Mvc.Utilities

@inject IContentDefinitionManager ContentDefinitionManager

@{
    ContentItem contentItem = Model.ContentItem;
    var contentTypeDefinition = ContentDefinitionManager.GetTypeDefinition(contentItem.ContentType);
    var typeDisplayName = contentTypeDefinition?.DisplayName ?? contentItem.ContentType.CamelFriendly();
}

<zone name="PageTitle">
    <h1 class="page-title">@RenderTitleSegments(T["Edit {0}", Html.Raw(typeDisplayName)])</h1>
</zone>

<div class="container-fluid">
    <div class="card">
        <div class="card-header">
            @RenderTitleSegments(T["Edit {0}", Html.Raw(typeDisplayName)])
        </div>
        @* ta-content is added because Media Module uses that class name from the default admin theme to inject the view*@
        <div class="card-body ta-content">
            <form asp-action="Edit" asp-route-contentitemid="@contentItem.ContentItemId" asp-route-returnUrl="@Context.Request.Query["ReturnUrl"]" method="post" enctype="multipart/form-data">
                @Html.ValidationSummary()
                @await DisplayAsync(Model)
            </form>
        </div>
    </div>
</div>