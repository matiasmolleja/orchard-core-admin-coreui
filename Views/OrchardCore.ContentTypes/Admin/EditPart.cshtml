@model EditPartViewModel
@using OrchardCore.ContentManagement.Metadata.Models
@using OrchardCore.Mvc.Utilities

@{
    var orderedFields = Model.PartDefinition.Fields
        .Select(field => new { Field = field, Order = int.Parse(field.Settings["Position"]?.ToString() ?? "0") })
        .OrderBy(x => x.Order)
        .Select(x => x.Field);
}
<zone name="PageTitle">
    <h1 class="page-title">@RenderTitleSegments(T["Edit Content Part - {0}", Model.DisplayName])</h1>
</zone>

<div class="container-fluid">
    <div class="card">
        <div class="card-header">
            @Model.DisplayName
        </div>
        <div class="card-body">
            <form asp-action="EditPart">
                @Html.ValidationSummary()

                <fieldset class="form-group">
                    <div class="row col-sm">
                        <label asp-for="Name">@T["Technical Name"]</label>
                        <input asp-for="Name" class="form-control" readonly />
                        <span class="hint">@T["Technical name of the part."]</span>
                    </div>
                </fieldset>

                @await DisplayAsync(Model.Editor)

                <fieldset class="form-group">
                    <h3>@T["Fields"]</h3>

                    @if (Model.PartDefinition != null)
                    {
                        <ul class="list-group sortable" id="fields">
                            @foreach (var field in orderedFields)
                            {
                                <li class="list-group-item">
                                    <div class="properties">
                                        <div class="related">
                                            <a asp-route-action="EditField" asp-route-id="@Model.PartDefinition.Name" asp-route-name="@field.Name" class="btn btn-primary btn-sm" role="button">@T["Edit"]</a>
                                            <a asp-route-action="RemoveFieldFrom" asp-route-id="@Model.PartDefinition.Name" asp-route-name="@field.Name" class="btn btn-danger btn-sm" role="button" itemprop="UnsafeUrl RemoveUrl">@T["Remove"]</a>
                                        </div>
                                        @field.DisplayName() <span class="hint">@T["â€” {0}", field.FieldDefinition.Name.CamelFriendly()]</span>
                                    </div>
                                    <input type="hidden" name="OrderedFieldNames" value="@field.Name" />
                                </li>
                            }
                        </ul>
                    }
                </fieldset>
                <fieldset class="form-group">
                    <a asp-route-action="AddFieldTo" asp-route-id="@Model.PartDefinition.Name" class="btn btn-info btn-sm" role="button">@T["Add Field"]</a>
                </fieldset>
                <div class="edit-item-secondary">
                    <fieldset class="form-group">
                        <button class="btn btn-primary" type="submit" name="submit.Save" value="Save">@T["Save"]</button>
                        <button class="btn btn-danger" type="submit" name="submit.Delete" value="Delete" itemprop="RemoveUrl">@T["Delete"]</button>
                    </fieldset>
                </div>
            </form>
        </div>
    </div>
</div>





<script at="Foot" type="text/javascript">
    //<![CDATA[
    $(function () {
        Sortable.create(document.getElementById("fields"));
    })
    //]]>
</script>